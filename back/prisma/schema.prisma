// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String      @unique
  phoneNumber   String      @unique
  password      String
  role          Role        @default(VENDEUR)

  vendor        Vendor?
  whitelist     Whitelist?

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  resetPasswordToken  String?  
  resetPasswordExpires DateTime? 

}

model Whitelist {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  user    User?   @relation(fields: [userId], references: [id])
  userId  Int?    @unique
}

model Vendor {
  id            Int         @id @default(autoincrement())
  promoCode     String      @unique
  iban          String      @default("") @unique


  user          User?        @relation(fields: [userId], references: [id])
  userId        Int?         @unique

  payouts       Payout[]

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum Role {
  ADMIN
  VENDEUR
}



model Payout {
  id          Int           @id @default(autoincrement())
  vendorId    Int
  amount      Float
  status      PayoutStatus  @default(PENDING)
  date        DateTime      @default(now())

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  vendor      Vendor        @relation(fields: [vendorId], references: [id])
}

enum PayoutStatus {
  PENDING
  PAID
}